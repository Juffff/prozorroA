{"version":3,"sources":["../../client/FileSaver.js"],"names":["root","factory","exports","nodeName","module","document","w","Error","window","noGlobal","navigator","test","userAgent","doc","get_URL","URL","webkitURL","save_link","createElementNS","can_use_save_link","click","node","event","MouseEvent","dispatchEvent","is_safari","HTMLElement","safari","is_chrome_ios","throw_outside","ex","setImmediate","setTimeout","force_saveable_type","arbitrary_revoke_timeout","revoke","file","revoker","revokeObjectURL","remove","dispatch","filesaver","event_types","concat","i","length","listener","call","auto_bom","blob","type","Blob","String","fromCharCode","FileSaver","name","no_auto_bom","force","object_url","dispatch_all","split","fs_error","FileReader","reader","onloadend","url","result","replace","popup","open","location","href","undefined","readyState","DONE","readAsDataURL","INIT","createObjectURL","opened","download","FS_proto","prototype","saveAs","msSaveOrOpenBlob","abort","WRITING","error","onwritestart","onprogress","onwrite","onabort","onerror","onwriteend","define","amd"],"mappings":"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","file":"FileSaver.js","sourcesContent":["/*! FileSaver.js v1.3.6\n *\n * A saveAs() FileSaver implementation.\n *\n * By Travis Clarke, https://travismclarke.com\n * By Eli Grey, http://eligrey.com\n *\n * License: MIT (https://github.com/clarketm/FileSaver.js/blob/master/LICENSE.md)\n */\n\n;(function (root, factory) {\n    if (typeof exports === 'object' && typeof exports.nodeName !== 'string') {\n        module.exports = root.document ? factory(root, true) : function (w) {\n            if (!w.document) {\n                throw new Error(\"FileSaver requires a window with a document\");\n            }\n            return factory(w);\n        };\n    } else {\n        factory(root);\n    }\n}(window || this, function (window, noGlobal) {\n        \"use strict\";\n        // IE <10 is explicitly unsupported\n        if (typeof window === \"undefined\" || typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n            return;\n        }\n        var\n            doc = window.document\n            // only get URL when necessary in case Blob.js hasn't overridden it yet\n            , get_URL = function () {\n                return window.URL || window.webkitURL || window;\n            }\n            , save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n            , can_use_save_link = \"download\" in save_link\n            , click = function (node) {\n                var event = new MouseEvent(\"click\");\n                node.dispatchEvent(event);\n            }\n            , is_safari = /constructor/i.test(window.HTMLElement) || window.safari\n            , is_chrome_ios = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n            , throw_outside = function (ex) {\n                (window.setImmediate || window.setTimeout)(function () {\n                    throw ex;\n                }, 0);\n            }\n            , force_saveable_type = \"application/octet-stream\"\n            // the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n            , arbitrary_revoke_timeout = 1000 * 40 // in ms\n            , revoke = function (file) {\n                var revoker = function () {\n                    if (typeof file === \"string\") { // file is an object URL\n                        get_URL().revokeObjectURL(file);\n                    } else { // file is a File\n                        file.remove();\n                    }\n                };\n                setTimeout(revoker, arbitrary_revoke_timeout);\n            }\n            , dispatch = function (filesaver, event_types, event) {\n                event_types = [].concat(event_types);\n                var i = event_types.length;\n                while (i--) {\n                    var listener = filesaver[\"on\" + event_types[i]];\n                    if (typeof listener === \"function\") {\n                        try {\n                            listener.call(filesaver, event || filesaver);\n                        } catch (ex) {\n                            throw_outside(ex);\n                        }\n                    }\n                }\n            }\n            , auto_bom = function (blob) {\n                // prepend BOM for UTF-8 XML and text/* types (including HTML)\n                // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n                if (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n                    return new Blob([String.fromCharCode(0xFEFF), blob], {type: blob.type});\n                }\n                return blob;\n            }\n            , FileSaver = function (blob, name, no_auto_bom) {\n                if (!no_auto_bom) {\n                    blob = auto_bom(blob);\n                }\n                // First try a.download, then web filesystem, then object URLs\n                var\n                    filesaver = this\n                    , type = blob.type\n                    , force = type === force_saveable_type\n                    , object_url\n                    , dispatch_all = function () {\n                        dispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n                    }\n                    // on any filesys errors revert to saving with object URLs\n                    , fs_error = function () {\n                        if ((is_chrome_ios || (force && is_safari)) && window.FileReader) {\n                            // Safari doesn't allow downloading of blob urls\n                            var reader = new FileReader();\n                            reader.onloadend = function () {\n                                var url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\n                                var popup = window.open(url, '_blank');\n                                if (!popup) window.location.href = url;\n                                url = undefined; // release reference before dispatching\n                                filesaver.readyState = filesaver.DONE;\n                                dispatch_all();\n                            };\n                            reader.readAsDataURL(blob);\n                            filesaver.readyState = filesaver.INIT;\n                            return;\n                        }\n                        // don't create more object URLs than needed\n                        if (!object_url) {\n                            object_url = get_URL().createObjectURL(blob);\n                        }\n                        if (force) {\n                            window.location.href = object_url;\n                        } else {\n                            var opened = window.open(object_url, \"_blank\");\n                            if (!opened) {\n                                // Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\n                                window.location.href = object_url;\n                            }\n                        }\n                        filesaver.readyState = filesaver.DONE;\n                        dispatch_all();\n                        revoke(object_url);\n                    }\n                ;\n                filesaver.readyState = filesaver.INIT;\n\n                if (can_use_save_link) {\n                    object_url = get_URL().createObjectURL(blob);\n                    setTimeout(function () {\n                        save_link.href = object_url;\n                        save_link.download = name;\n                        click(save_link);\n                        dispatch_all();\n                        revoke(object_url);\n                        filesaver.readyState = filesaver.DONE;\n                    });\n                    return;\n                }\n\n                fs_error();\n            }\n            , FS_proto = FileSaver.prototype\n            , saveAs = function (blob, name, no_auto_bom) {\n                return new FileSaver(blob, name || blob.name || \"download\", no_auto_bom);\n            }\n        ;\n        // IE 10+ (native saveAs)\n        if (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n            saveAs = function (blob, name, no_auto_bom) {\n                name = name || blob.name || \"download\";\n\n                if (!no_auto_bom) {\n                    blob = auto_bom(blob);\n                }\n                return navigator.msSaveOrOpenBlob(blob, name);\n            };\n        }\n\n        FS_proto.abort = function () {\n        };\n        FS_proto.readyState = FS_proto.INIT = 0;\n        FS_proto.WRITING = 1;\n        FS_proto.DONE = 2;\n\n        FS_proto.error =\n            FS_proto.onwritestart =\n                FS_proto.onprogress =\n                    FS_proto.onwrite =\n                        FS_proto.onabort =\n                            FS_proto.onerror =\n                                FS_proto.onwriteend =\n                                    null;\n\n        if (typeof define === \"function\" && define.amd) {\n            define(\"file-saverjs\", [], function () {\n                return saveAs;\n            });\n        }\n\n        if (typeof noGlobal === 'undefined') {\n            window.saveAs = saveAs;\n        }\n        return saveAs;\n    }\n));"]}