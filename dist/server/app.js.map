{"version":3,"sources":["../../server/app.js"],"names":["db","JSDOM","jsdom","connect","corsOptions","origin","optionsSuccessStatus","pause","seconds","waitTill","Date","getTime","app","use","bodyParser","json","startUri","apiPrefix","process","on","err","console","error","stack","log","getNextURI","uri","goThrowTenders","get","req","res","listTenders","data","send","sendStatus","https","require","str","chunk","resJson","JSON","parse","nextUri","next_page","length","map","id","forEach","analiseToTender","setNextURI","prefix","then","body","allInfo","questions","complaints","tender","value","amount","Number","parseInt","_id","name","procuringEntity","auctionPeriod","startDate","awardCriteria","bids","tenderers","filter","bid","tenderer","replace","items","item","classification","description","classification_ids","tenderID","title","currency","valueAddedTaxIncluded","status","tenderStatusEnum","suppliers","awards","Array","isArray","award","indexOf","supplier","push","a","itemIdEnum","createTender","listen"],"mappings":"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","file":"app.js","sourcesContent":["/*console.log(JSON.parse(document.getElementsByTagName('pre')[0].innerHTML))*/\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport got from 'got';\nimport jsdom from 'jsdom';\n\nconst {JSDOM} = jsdom;\nimport replaceAll from 'replaceall';\nimport * as db from './utils/dbutils';\nimport utf8 from 'utf8';\nimport util from 'util';\nimport itemIdEnum from './enums/item_id';\nimport XMLHttpRequest from 'xmlhttprequest';\nimport tenderStatusEnum from './enums/tender_status';\n\n\ndb.connect();\nconst corsOptions = {\n    origin: '*',\n    optionsSuccessStatus: 200, // some legacy browsers (IE11, various SmartTVs) choke on 204\n};\n\nfunction pause(seconds) {\n    const waitTill = new Date(new Date().getTime() + seconds * 1000);\n    while (waitTill > new Date()) {\n    }\n}\n\n\nconst app = express();\napp.use(bodyParser.json());\napp.use(cors(corsOptions));\n\nlet startUri = 'https://public.api.openprocurement.org/api/2.4/tenders?offset=2018-02-27T10%3A18%3A35.705532%2B02%3A00';\nconst apiPrefix = 'https://public.api.openprocurement.org/api/2.4/tenders/';\n\nprocess.on('uncaughtException', function (err) {\n    console.error(err.stack);\n    console.log(\"Node NOT Exiting...\");\n    db.getNextURI(function (uri) {\n        if (uri) {\n            goThrowTenders(uri);\n        } else {\n            goThrowTenders(startUri);\n        }\n    });\n});\n\n\napp.get('/', (req, res) => {\n    db.listTenders({}, function (data) {\n        res.send(data);\n    })\n})\n    .get('start', (req, res) => {\n        console.log('Start');\n        db.getNextURI(function (uri) {\n            if (uri) {\n                goThrowTenders(uri);\n            } else {\n                goThrowTenders(startUri);\n            }\n        });\n\n        res.sendStatus(200);\n    });\n\nfunction goThrowTenders(uri) {\n    const https = require('https');\n    https.get(uri, function (res) {\n        let str = '';\n        res.on('data', function (chunk) {\n            str += chunk;\n        });\n        res.on('end', function () {\n            const resJson = JSON.parse(str);\n            const nextUri = resJson.next_page.uri;\n            const data = resJson.data;\n            if (data.length === 0) {\n                return;\n            } else {\n                resJson.data.map(data => data.id).forEach(id => {\n                    analiseToTender(apiPrefix, id, uri);\n                });\n                db.setNextURI(nextUri);\n                goThrowTenders(nextUri);\n            }\n        });\n    });\n}\n\nfunction analiseToTender(prefix, id, uri) {\n    try {\n        got(`${prefix}${id}`).then(data => {\n            if (data.body) {\n                const allInfo = JSON.parse(data.body).data;\n                if (allInfo) {\n                    delete allInfo.questions;\n                    delete allInfo.complaints;\n                    const tender = {};\n                    try {\n                        if (allInfo.value) {\n                            tender.amount = allInfo.value.amount;\n                            if (Number.parseInt(tender.amount, 10) > 5000000) {\n                                tender._id = allInfo.id;\n                                tender.name = allInfo.procuringEntity.name;\n                                if (allInfo.auctionPeriod) {\n                                    tender.startDate = allInfo.auctionPeriod.startDate;\n                                }\n                                tender.awardCriteria = allInfo.awardCriteria;\n                                if (allInfo.bids) {\n                                    tender.tenderers = allInfo.bids.filter(bid => {\n                                        if (bid.tenderers) {\n                                            const tenderer = bid.tenderers[0].name;\n                                            return tenderer !== null;\n                                        }\n                                        return false;\n                                    }).map(tenderer => {\n                                        return tenderer.tenderers[0].name.replace('ТОВАРИСТВО З ОБМЕЖЕНОЮ ВІДПОВІДАЛЬНІСТЮ', 'ТОВ').replace('«', '\\\"').replace('»', '\\\"');\n                                    });\n                                }\n                                tender.items = allInfo.items.map(item => item.classification.description);\n                                tender.classification_ids = allInfo.items.map(item => item.classification.id);\n                                tender.tenderID = allInfo.tenderID;\n                                tender.title = allInfo.title;\n                                tender.currency = allInfo.value.currency;\n                                tender.valueAddedTaxIncluded = allInfo.value.valueAddedTaxIncluded;\n                                tender.status = tenderStatusEnum[allInfo.status];\n                                if (tender.status === tenderStatusEnum['complete']) {\n                                    let suppliers = [];\n                                    if (allInfo.awards) {\n                                        if (Array.isArray(allInfo.awards)) {\n                                            allInfo.awards.forEach(award => {\n                                                if (award.suppliers) {\n                                                    if (Array.isArray(award.suppliers)) {\n                                                        award.suppliers.forEach(supplier => {\n                                                            if (suppliers.indexOf(supplier.name) === -1) {\n                                                                suppliers.push(supplier.name);\n                                                            }\n                                                        });\n                                                    }\n                                                }\n                                            });\n                                        }\n                                    }\n                                    tender.suppliers = suppliers;\n                                }\n                                let a = false;\n                                if (tender.classification_ids) {\n                                    if (Array.isArray(tender.classification_ids)) {\n                                        tender.classification_ids.forEach(id => {\n                                            if (itemIdEnum.indexOf(id) > -1) {\n                                                a = true;\n                                            }\n                                        });\n                                    }\n                                }\n                                if (a === true) {\n                                    console.log(uri);\n                                    console.log(tender);\n                                    db.createTender(tender);\n                                    a = false;\n                                }\n\n                            }\n                        }\n                        //pause(0.05);\n                    } catch (err) {\n                        console.log(allInfo.id);\n                        console.log(allInfo.tenderID);\n                        console.log(tenderStatusEnum[allInfo.status]);\n                        console.log(tender.amount);\n                        console.log(err);\n                        //pause(0.05);\n                    }\n\n                }\n            }\n        });\n    } catch (err) {\n        console.log(err);\n    }\n\n}\n\napp.listen(8080, () => {\n    console.log(`Server is running on 8080`);\n});\n\n\n\n"]}