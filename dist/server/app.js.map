{"version":3,"sources":["../../server/app.js"],"names":["db","connect","corsOptions","origin","optionsSuccessStatus","pause","seconds","waitTill","Date","getTime","app","use","bodyParser","json","startUri","config","apiPrefix","prefix","process","on","err","logger","log","stack","console","error","getNextURI","uri","goThrowTenders","get","req","res","send","setTimeout","listAllTenders","data","updateExistedTenders","listTenders","sendStatus","task5Min","stop","task1Hour","start","path","join","__dirname","milliseconds","https","require","str","chunk","resJson","JSON","parse","nextUri","next_page","length","setNextURI","map","id","forEach","analiseToTender","getTenderByID","tender","_id","then","body","allInfo","questions","complaints","value","amount","Number","parseInt","minAmount","maxAmount","name","procuringEntity","auctionPeriod","startDate","undefined","documents","Array","isArray","datePublished","enquiryPeriod","invalidationDate","awardCriteria","bids","tenderers","filter","bid","tenderer","replace","items","itemIDs","classificationIDs","indexOf","item","classification","description","push","classification_ids","tenderID","title","currency","status","tenderStatusEnum","suppliers","awards","award","supplier","a","itemIdEnum","createTender","listen","env","PORT","cron","schedule"],"mappings":"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","file":"app.js","sourcesContent":["//heroku config:set NODE_PATH=./lib\n//exports NODE_PATH=$NODE_PATH:./lib\n\n\nimport path from 'path';\n/*console.log(JSON.parse(document.getElementsByTagName('pre')[0].innerHTML))*/\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport got from 'got';\nimport cron from 'node-cron';\nimport * as db from './utils/dbUtils.js';\nimport itemIdEnum from './enums/item_id.js';\nimport tenderStatusEnum from './enums/tender_status.js';\nimport logger from './utils/logger.js';\nimport errorHandler from \"./errorHandler.js\";\nimport config from \"./config/config.js\";\nimport serve from 'express-static';\n\n/*import cron from 'node-cron';\nimport * as db from '/app/build/utils/dbUtils.js';\nimport itemIdEnum from '/app/build/enums/item_id.js';\nimport tenderStatusEnum from '/app/build/enums/tender_status.js';\nimport logger from '/app/build/utils/logger.js';\nimport errorHandler from \"./errorHandler.js\";\nimport config from \"/app/build/config/config.js\";\nimport serve from 'express-static';*/\n\n\ndb.connect();\nconst corsOptions = {\n    origin: '*',\n    optionsSuccessStatus: 200, // some legacy browsers (IE11, various SmartTVs) choke on 204\n};\n\nfunction pause(seconds) {\n    const waitTill = new Date(new Date().getTime() + seconds * 1000);\n    while (waitTill > new Date()) {\n    }\n}\n\nconst app = express();\napp.use(bodyParser.json());\napp.use(cors(corsOptions));\n\n\nlet startUri = config.startUri;\nconst apiPrefix = config.prefix;\n\nprocess.on('uncaughtException', function (err) {\n    logger.log('error', err.stack);\n    console.error(err.stack);\n    console.log(\"Node NOT Exiting...\");\n    db.getNextURI(function (uri) {\n        if (uri) {\n            goThrowTenders(uri);\n        } else {\n            goThrowTenders(startUri);\n        }\n    });\n});\n\napp\n    .get('/start', (req, res) => {\n        db.getNextURI(function (uri) {\n            if (uri) {\n                goThrowTenders(uri);\n            } else {\n                goThrowTenders(startUri);\n            }\n            res.send(200);\n        });\n        setTimeout(function () {\n            console.log('Wake and move!');\n            db.getNextURI(function (uri) {\n                if (uri) {\n                    goThrowTenders(uri);\n                } else {\n                    goThrowTenders(startUri);\n                }\n            });\n        }, 60000);\n    })\n    .get('/start2018', (req, res) => {\n        goThrowTenders('https://public.api.openprocurement.org/api/2.4/tenders?offset=2018');\n        res.send(200);\n    })\n\n    .get('/start2017', (req, res) => {\n        goThrowTenders('https://public.api.openprocurement.org/api/2.4/tenders?offset=2017');\n        res.send(200);\n    })\n\n    .get('/update', (req, res) => {\n        db.listAllTenders(function (data) {\n            updateExistedTenders(data);\n        });\n        res.send(200);\n    })\n\n    .get('/tenders', (req, res) => {\n        db.listTenders({}, function (data) {\n            res.send(data);\n        })\n    })\n\n    .get('/ping', (req, res) => {\n        res.sendStatus(200);\n    })\n\n    .get('/stopall', (req, res) => {\n        task5Min.stop();\n        task1Hour.stop();\n        res.send(200);\n    })\n\n    .get('/startall', (req, res) => {\n        task5Min.start();\n        task1Hour.start();\n        res.send(200);\n    });\n\napp.use('/', serve(path.join(__dirname, '..', 'client')));\n\n//app.use('/', serve('/app/build/client'));\n\nfunction goThrowTenders(uri) {\n    task1Hour.stop();\n    console.log('uri - ', uri);\n    let milliseconds = null;\n\n    const https = require('https');\n    https.get(uri, function (res) {\n        milliseconds = new Date().getTime();\n        let str = '';\n        res.on('data', function (chunk) {\n            str += chunk;\n        });\n        res.on('end', function () {\n            const resJson = JSON.parse(str);\n            const nextUri = resJson.next_page.uri;\n            const data = resJson.data;\n            //  console.log(data.length);\n            if (data.length === 0) {\n                logger.log('info', 'goThrowTenders finished');\n                console.log('Go throw tenders finished.');\n                db.setNextURI(startUri);\n                task1Hour.start();\n            } else {\n                resJson.data.map(data => data.id).forEach(id => {\n                    analiseToTender(apiPrefix, id, uri);\n                });\n                db.setNextURI(nextUri);\n                goThrowTenders(nextUri);\n            }\n        });\n    });\n}\n\nfunction updateExistedTenders(data) {\n    data.forEach(tender => {\n        db.getTenderByID(tender, function (tender) {\n            analiseToTender(apiPrefix, tender._id);\n        })\n    });\n}\n\nfunction analiseToTender(prefix, id, uri) {\n    try {\n        got(`${prefix}${id}`).then(data => {\n            if (data.body) {\n                try {\n                    const allInfo = JSON.parse(data.body).data;\n                    if (allInfo) {\n                        delete allInfo.questions;\n                        delete allInfo.complaints;\n                        const tender = {};\n                        try {\n                            if (allInfo.value) {\n                                tender.amount = allInfo.value.amount;\n                                if (Number.parseInt(tender.amount, 10) > config.minAmount && Number.parseInt(tender.amount, 10) < config.maxAmount) {\n                                    tender._id = allInfo.id;\n                                    tender.name = allInfo.procuringEntity.name;\n                                    if (allInfo.auctionPeriod) {\n                                        tender.startDate = allInfo.auctionPeriod.startDate;\n                                        if (tender.startDate === undefined) {\n                                            if (allInfo.documents) {\n                                                if (Array.isArray(allInfo.documents)) {\n                                                    if (allInfo.documents[0]) {\n                                                        tender.startDate = allInfo.documents[0].datePublished;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    if (allInfo.enquiryPeriod) {\n                                        tender.datePublished = allInfo.enquiryPeriod.invalidationDate;\n                                    }\n                                    tender.awardCriteria = allInfo.awardCriteria;\n                                    if (allInfo.bids) {\n                                        tender.tenderers = allInfo.bids.filter(bid => {\n                                            if (bid.tenderers) {\n                                                const tenderer = bid.tenderers[0].name;\n                                                return tenderer !== null;\n                                            }\n                                            return false;\n                                        }).map(tenderer => {\n                                            return tenderer.tenderers[0].name.replace('ТОВАРИСТВО З ОБМЕЖЕНОЮ ВІДПОВІДАЛЬНІСТЮ', 'ТОВ').replace('«', '\\\"').replace('»', '\\\"');\n                                        });\n                                    }\n\n                                    if (allInfo.items) {\n                                        let itemIDs = [];\n                                        let classificationIDs = [];\n\n                                        allInfo.items.forEach(item => {\n                                            if (itemIDs.indexOf(item.classification.description) === -1) {\n                                                itemIDs.push(item.classification.description);\n                                            }\n                                        });\n                                        allInfo.items.forEach(item => {\n                                            if (classificationIDs.indexOf(item.classification.id) === -1) {\n                                                classificationIDs.push(item.classification.id);\n                                            }\n                                        });\n                                        tender.items = itemIDs;\n                                        tender.classification_ids = classificationIDs;\n                                    }\n                                    tender.tenderID = allInfo.tenderID;\n                                    tender.title = allInfo.title;\n                                    tender.currency = allInfo.value.currency;\n                                    tender.status = tenderStatusEnum[allInfo.status];\n                                    if (tender.status === tenderStatusEnum['complete'] || tender.status === tenderStatusEnum['active.awarded']) {\n                                        let suppliers = [];\n                                        if (allInfo.awards) {\n                                            if (Array.isArray(allInfo.awards)) {\n                                                allInfo.awards.forEach(award => {\n                                                    if (award.suppliers) {\n                                                        if (Array.isArray(award.suppliers)) {\n                                                            award.suppliers.forEach(supplier => {\n                                                                if (suppliers.indexOf(supplier.name) === -1) {\n                                                                    suppliers.push(supplier.name);\n                                                                }\n                                                            });\n                                                        }\n                                                    }\n                                                });\n                                            }\n                                        }\n                                        tender.suppliers = suppliers;\n                                    }\n                                    if (!tender.tenderers && tender.suppliers) {\n                                        tender.tenderers = tender.suppliers;\n                                    }\n                                    let a = false;\n                                    if (tender.classification_ids) {\n                                        if (Array.isArray(tender.classification_ids)) {\n                                            tender.classification_ids.forEach(id => {\n                                                if (itemIdEnum.indexOf(id) > -1) {\n                                                    a = true;\n                                                }\n                                            });\n                                        }\n                                    }\n                                    if (a === true) {\n                                        //logger.log('info', `a tender was found - ${JSON.stringify(tender)}`);\n                                        /*   console.log(uri);\n                                    /!*       console.log(tender);*!/*/\n                                        db.createTender(tender);\n                                        a = false;\n                                    }\n\n                                }\n                            }\n                            //pause(0.05);\n                        } catch (err) {\n                            console.log(allInfo.id);\n                            console.log(allInfo.tenderID);\n                            console.log(tenderStatusEnum[allInfo.status]);\n                            console.log(tender.amount);\n                            console.log(err);\n                            //pause(0.05);\n                        }\n\n                    }\n                } catch (err) {\n                    errorHandler(err);\n\n                }\n            }\n        });\n    } catch (err) {\n        console.log(err);\n    }\n\n}\n\n/*app.listen(8080, () => {\n    console.log(`Server is running on 8080`);\n});*/\n\napp.listen(process.env.PORT || 8080, () => {\n    if (process.env.PORT) {\n        console.log(`Server is running on ${process.env.PORT}`);\n    } else {\n        console.log(`Server is running on 8080`);\n\n    }\n});\n\n/*cron.schedule('1-59 * * * * * ', function(){\n    console.log('sec 2');\n}, true);*/\n\n/*const task1Min =  cron.schedule('*!/1 * * * *', function(){\n    console.log('minute 1');\n}, false);*/\n\nconst task5Min = cron.schedule('*/5 * * * *', function () {\n    logger.log('info', '5MinTask started');\n    db.listAllTenders(function (data) {\n        updateExistedTenders(data);\n    });\n}, false);\n\nconst task1Hour = cron.schedule('* */1 * * *', function () {\n    logger.log('info', '1HourTask started');\n    db.getNextURI(function (uri) {\n        goThrowTenders(startUri);\n    });\n    setTimeout(function () {\n        console.log('Wake and move!');\n        db.getNextURI(function (uri) {\n            goThrowTenders(startUri);\n        });\n    }, 60000);\n\n}, false);\n\ntask5Min.start();\ntask1Hour.start();"]}